{{ 'component-switch-blocks.css' | asset_url | stylesheet_tag }}
<script src="{{ 'component-switch-blocks.js' | asset_url }}" defer="defer"></script>

<style>

  /* Arrows START */
  @media (max-width: 768px) {
    .switch-blocks-{{ section.id }}- * { 
scrollbar-color: white !important;
}
.prodswatch-{{section.id}}::-webkit-scrollbar-thumb {
  min-width: 11px !important;\scrollbar-color: white !important;
}
    .icon-container {
      position: absolute;
      top: 18%;
      left: 18%;
      width: 60%;
      margin: auto;
      display: flex;
      justify-content: space-between;
    }
    .switch-blocks-{{ section.id }}- .buttons-container { 
      max-width: 100% !important;
    }
    {% for block in section.blocks %}
    .switch-blocks .buttons-container .selected-{{ block.id }} {
    
      min-width: 369px  !important;
      text-decoration: underline;
      text-decoration-color: #EB6FBD;
    text-underline-position: under;

      text-decoration-thickness: 2px;
    width: 350px;
    max-width: 100vw !important;
    text-align: center;
    }

    .icon-container__rt {

    transform: rotateZ(270deg);
    }

    .icon-container__lft{

    transform: rotateZ(90deg);
    } 
    .switch-blocks .buttons-container .selected-{{ block.id }}:first-of-type {
      padding: 0 !important;
      margin-left: -25px;
    }
    .switch-blocks .buttons-container .selected-{{ block.id }}:nth-of-type(5n) {
      padding-left: 14% !important;
    }
    .switch-blocks .buttons-container .selected-{{ block.id }}:nth-of-type(2n) {
      margin-left: -10px !important;
    }.switch-blocks .buttons-container .selected-{{ block.id }}:nth-of-type(6n) {
      padding-left: 20% !important;
    }
    .switch-blocks .buttons-container .selected-{{ block.id }}:nth-of-type(4n) {
      margin-left: 5px !important;
    }
    .switch-blocks .buttons-container .selected-{{ block.id }}:nth-of-type(3n) {
      /* margin-left: 0; */
    /* margin: 0; */
    /* padding: 20px; */
    padding-left: 3% ;}
    {%endfor %}
  }

  .switch-blocks {
    position: relative;
  }
  /* Arrows END */
  .switch-blocks .buttons-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    margin-top: 15px;
    border-bottom: 2px solid #DADADA;
  }
  .switch-blocks .buttons-container button {
    min-width: min-content;
    max-width: max-content;
    padding: 12px;
    margin: auto;
    outline: none;
    background: transparent;
    border: none;
    color: #fff;
    font-size: 12px;
    letter-spacing: 1.2px;
    text-transform: uppercase;
    transition: background 100ms linear;
    cursor: pointer;
  }
  .switch-blocks .inner {
    max-width: 1350px;
    margin: auto;
  }
  .switch-blocks-{{ section.id }}- .inner {
    padding: {{ section.settings.padding }}vh 20px;
    height: 600px !important;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left {
    margin-right: 10px;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__right {
    /* margin-left: 10px; */
  } 
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left .inner-headings {
    text-align: left !important;
    text-transform: uppercase;
    margin-top: 40px;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left .inner-headings .inner-heading {
    font-size: 48px;
    letter-spacing: 2px;
    color: #fff;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left .inner-headings .inner-subheading {
    font-size: 14px;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left .content-btn {
    text-align: center;
    margin-top: 15px;
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left .content-btn a {
    display: block;
    text-decoration: none;
    text-transform: uppercase;
    background: #fff;
    color: #000;
    font-size: 12px;
    min-width: 150px;
    max-width: 180px;
    padding: 10px;
    letter-spacing: 1.5px;
    
  }
  .switch-blocks-{{ section.id }}- .inner .inner-content .content-desc p {
    margin: 0;
    color: #fff;
    font-size: 12px;
    letter-spacing: 1.2px;
    font-weight: 100;
  }
  .switch-blocks-{{ section.id }}- {
    background: {{ section.settings.background }};
  }
  .switch-blocks-{{ section.id }}- .switch-block {
    display: none;
  }
  .switch-blocks-{{ section.id }}- :first-child .switch-block {
    display: block;
  }
  .switch-blocks-{{ section.id }}- .content-img img{
    display: block;
    max-width: 100%;
  }
  .switch-blocks-{{ section.id }}- .main-image img  {
    display: block;
    max-width: 100%;
  }
  .switch-blocks-{{ section.id }}- .content-img {
    margin: 20px 0;
  }

  @media(max-width:768px) {
    .switch-blocks-{{ section.id }}- .inner {
      padding-left: 5px;
      padding-right: 5px;

    width: 350px;

    }  .prodswatch-{{section.id}} {
        display: flex;
        flex-wrap: wrap;
        margin: auto;
      }
      .prodswatch-{{section.id}} .textual {
        width: 100%;
        margin: auto;
        text-align: center;
      }

    /* scroll buttons */
    .switch-blocks-{{ section.id }}- .buttons-container {  
      display: flex !important;
      overflow-x: scroll;
      overflow-y: hidden;
    justify-content: flex-start;
    }
    .textual {
      margin: auto !important;
padding: 20px 0 0 0 ;
    }
    .switch-blocks-{{ section.id }}- .inner .main-subheading {
      font-size: 12px !important;
    }
    .switch-blocks-{{ section.id }}- .inner .main-heading {
      font-size: 22px !important;
      letter-spacing: 1.4px;
    }
    .switch-blocks-{{ section.id }}- .inner .inner-content {
      margin-top: 0px;
    }
    .switch-blocks-{{ section.id }}- .inner .inner-headings {
      padding-top: 0px;
    }
    .switch-blocks-{{ section.id }}- .inner .inner-headings > * {
      text-align: center;
    }
    .switch-blocks-{{ section.id }}- .inner-content {
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;

    }
    .switch-blocks-{{ section.id }}- .main-image img  {
      max-width: 100%;
    }
    .switch-blocks-{{ section.id }}- .buttons-container {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      max-width: 300px;
      margin: auto;
    }
    .switch-blocks-{{ section.id }}- .buttons-container button {
      margin: auto;
      
    min-width:350px;
    width: 350px;
    }
    .switch-blocks-{{ section.id }}- .content-btn a {
      margin: auto;
    }
     .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__left {
     margin-right: 0px;
    }
    .switch-blocks-{{ section.id }}- .inner .inner-content .inner-content__right {
      margin-left: 0px;
    } 
  }

      @keyframes shadow-pulse
      {
        0% {
          box-shadow: 0 0 0 0px var(--btnColor);
        }
        100% {
          box-shadow: 0 0 0 4px rgba(255, 255, 255, 0);   
        }
      }

      .textual {
        min-width: 30%;
        margin: 0 10px 0px -50px;
        
    align-self: center; 
      }

      .prodswatch-{{section.id}} {
        display: flex;
  
        margin: auto;
      }
  
  
  @media only screen and (min-width: 1000px) {
    .icon-container {
      display: none;
    }
  }
</style>

<div class="wrapper prodswatch-{{section.id}}">    
<div class="textual">
    <p class="pink"> {{section.settings.when}}</p>
    <h1 class="maroonbold"> {{section.settings.schedule }} </h1>
    <p class="grayregular" style="margin: 0; padding: 0">
      {{ section.settings.description }}
    </p>
</div>
<div class="switch-blocks switch-blocks-{{ section.id }}-">
 
  <div class="inner">
    {% unless section.settings.heading == blank and section.settings.subheading == blank %}
    {% render 'section-heading'
    heading: section.settings.heading
    subheading: section.settings.subheading
    %}
    {% endunless %}
    <div class="buttons-container">
      <div class="icon-container">
        <!-- Left arrow -->
        <div class="arrow-icon icon-container__lft">
          {% render 'icon-chevron-down' %}
        </div>
        <!-- Right arrow -->
        <div class="arrow-icon icon-container__rt">
          {% render 'icon-chevron-down' %}
        </div>
      </div>
      {% for block in section.blocks %}
      {% unless block.settings.switch_btn_title == blank %}
      <style>
        .switch-blocks .buttons-container .block-btn-{{ block.id }} {
          color: {{ block.settings.switch_btn_text_color }};
          /* animation: shadow-pulse 1s infinite; */
          --btnColor: {{ block.settings.switch_btn_color }};
    font-family: 'Acumin_Pro';
    font-style: normal;
    font-weight: 600;
    font-size: 18px;
    line-height: 30px;
    color: #6C1D45;

 
        }
        .switch-blocks .buttons-container .selected-{{ block.id }} {
          /* color: {{ block.settings.switch_btn_color }}; */
          border-bottom: 2px solid {{ block.settings.switch_btn_color }};
          border-radius: 0px !important;

}
        }
        .switch-blocks .buttons-container .block-btn-{{ block.id }}:hover {
          color: {{ block.settings.switch_btn_color }};
        }
      </style>
        <button data-id="{{block.id}}" class="block-btn block-btn-{{ block.id }} {% if forloop.first %} selected-{{block.id}} {% endif %}" data-id={{ block.id }}>{{ block.settings.switch_btn_title }}</button>
        {% endunless %}
      {% endfor %}
    </div>
    {% for block in section.blocks %}
    <style>
      .subheading-{{ block.id }} {
        color:{{ block.settings.switch_btn_color }};
      }
    </style>
      <div class="switch-block switch-block-{{ block.id }}-" {% unless forloop.first %} style="display: none;" {% endunless %} data-id={{ block.id }}>
        <div class="inner-content">
       
          <div class="inner-content__right">
          <div class="main-image">
            {% if block.settings.main_image != blank %}
              {% render 'gaia-image' 
                image: block.settings.main_image
                mobile_image: block.settings.mobile_main_image
                lazy_loading: false
            %} 
            {% else %}
                  {% endif %}
                  {{block.settings.metafield}}
          </div>
        </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>
</div>
<script>
  const switchBlocks = () => {
    const switchButtons = document.querySelectorAll('.switch-blocks-{{ section.id }}- .block-btn');
    const switchBlocks = document.querySelectorAll('.switch-blocks-{{ section.id }}- .switch-block');
    switchButtons.forEach(btn => {
      btn.addEventListener('click', (e) => {
        const id = btn.getAttribute('data-id')
        btn.classList.add(`selected-${id}`);
        switchButtons.forEach(el => {
          const id = el.getAttribute('data-id')
          if (e.target.getAttribute('data-id') !== id) {
            el.classList.remove(`selected-${id}`);
          }
          
        })
        const btnId = btn.getAttribute('data-id');
        switchBlocks.forEach(block => {
          const blockId = block.getAttribute('data-id');
          if ( btnId === blockId ) {
            block.style.display = 'block';
          } else {
            block.style.display = 'none';
          }
        })
      })
    })
  }
  switchBlocks();
  document.addEventListener('shopify:section:load', switchBlocks);



  // Arrow scroll
  const arrowScroll = () => {
    // Position range - amount of units slider will move 
    let posRange = 360;

    // Select all block buttons
    const blockButtons = document.querySelectorAll('.switch-blocks-{{ section.id }}- .block-btn');

   const scrollClickPosition = (currentPostion) => {
    // First button
    if (currentPostion === 0) {
      // Select first button
      blockButtons[0].click();
    }

    if (currentPostion === posRange) {
      blockButtons[1].click();
    }

    if (currentPostion === (posRange * 2)) {
      blockButtons[2].click();
    } 

    if (currentPostion === (posRange * 3)) {
      blockButtons[3].click();
    } 

    if (currentPostion === (posRange * 4)) {
      blockButtons[4].click();
    } 

    if (currentPostion === (posRange * 5)) {
      blockButtons[5].click();
    } 

    if (currentPostion === (posRange * 6)) {
      blockButtons[6].click();
    } 
    
   }

    // Scrollable object
    const scrollableObj = document.querySelector(`.switch-blocks-{{ section.id }}- .buttons-container`);
    // Arrow click handler
    /**
     * @param {string} classname - classname of the clickable element
    */

    let scrollToPosition = 0;
    
    const arrowClickHandler = (arrow) => {
      if (arrow.classList.contains('icon-container__lft')) {
        // Left arrow click logic
          scrollToPosition = scrollToPosition - posRange;
          scrollableObj.scrollLeft = scrollToPosition;
          scrollClickPosition(scrollToPosition);




      } else {
        // Right arrow click logic
          scrollToPosition += posRange;
          scrollableObj.scrollLeft = scrollToPosition;
          scrollClickPosition(scrollToPosition);
      }
    }



    // Seelct all arrow icons
    const arrows = document.querySelectorAll('.arrow-icon');
    // Loop through each arrow icon and check for the classname

    arrows.forEach(arrow => {
     arrow.addEventListener('click', () => {
        arrowClickHandler(arrow);
      })
    })

  }
  document.addEventListener('DOMContentLoaded', arrowScroll); 
  document.addEventListener('shopify:section:load', arrowScroll);

</script>
{% schema %}
{
  "name":"Switch blocks",
  "tag":"section",
  "settings": [
 {
  "type": "header",
  "content": "Textual Content - Left" 
 },
{
  "type": "text",
  "id": "when",
  "label": "Date of event",
  "default": "June 4 to June 11, 2022" 
},{
  "type": "text",
  "id": "schedule",
  "label": "Label",
  "default": "Schedule" 
},
{
  "type": "richtext",
  "id": "description",
  "label": "Description"
},
    {
      "type":"header",
      "content": "headings"
    },
    {
      "type":"text",
      "id":"heading",
      "label":"Section heading"
    },
    {
      "type":"text",
      "id":"subheading",
      "label":"Section subheading"
    },
    {
      "type":"header",
      "content": "general"
    },
    {
      "type":"color_background",
      "id":"background",
      "label":"Section background",
      "default":"transparent"
    },
     {
      "type":"select",
      "id":"padding",
      "label":"Vertical padding",
      "default":"10",
      "options":[
        {
          "value":"2",
          "label":"Small"
        },
        {
          "value":"6",
          "label":"Medium"
        },
        {
          "value":"10",
          "label":"Large"
        }
      ],
      "info":"Vertical padding in view heights (2/6/10)"
    }
  ],
    "blocks": [
    {
      "type": "text",
      "name": "Content block",
      "settings": [
        {
          "type":"header",
          "content": "buttons"
        },
        {
          "type":"text",
          "id":"switch_btn_title",
          "label":"Switch button title",
          "default":"Switch Button"
        },
        {
          "type":"color",
          "id":"switch_btn_color",
          "label":"Switch Border color",
          "default":"#6C1D45"
        }, {
          "type":"color",
          "id":"switch_btn_text_color",
          "label":"Switch  color",
          "default":"#EB6FBD"
        },
        {
          "type":"header",
          "content": "content on the left"
        },
        {
          "type":"text",
          "id":"content_heading",
          "label":"Content heading"
        },
        {
          "type":"text",
          "id":"content_subheading",
          "label":"Content subheading"
        },
        {
          "type":"image_picker",
          "id":"desc_img",
          "label":"Description image",
          "info":"Image on the LEFT, above the description element"
        },
        {
          "type":"textarea",
          "id":"content_desc",
          "label":"Content description"
        },
        {
          "type":"text",
          "id":"content_btn",
          "label":"Content button"
        },
        {
          "type":"url",
          "id":"content_btn_url",
          "label":"Content button url"
        },
        {
          "type":"header",
          "content": "Mobile"
        },
        {
          "type":"image_picker",
          "id":"mobile_desc_img",
          "label":"Mobile description image"
        },
        {
          "type":"header",
          "content": "content on the right"
        },
        {
          "type":"image_picker",
          "id":"main_image",
          "label":"Main image",
          "info":"Main image on the right"
        },
       {
        "type": "liquid",
        "id": "metafield",
        "label": "Metafield - Schedule" 
       },
        {
          "type":"header",
          "content": "Mobile"
        },
        {
          "type":"image_picker", 
          "id":"mobile_main_image",
          "label":"Mobile main image"
        }
      ]
    }
  ], 
  "presets":[
    {
      "name":"Switch blocks Product"
    }
  ]
}
{% endschema %}

<style>

.prodswatch-{{section.id}} td:nth-child(odd) {
  font-family: 'Acumin_Pro';
font-style: normal;
font-weight: 600;
font-size: 18px;
line-height: 30px;
/* identical to box height */ 

color: #6C1D45;

}
/* tr:nth-child(odd) {   border-top:2px solid #DADADA !important;} */

.prodswatch-{{section.id}} td:nth-child(2n) {
  font-style: normal;
font-weight: 400;
font-size: 14px;
line-height: 19px;
 
border-top: 1px solid #57575; 
}
.prodswatch-{{section.id}} tr, td {
border-top:2px solid #DADADA !important; }


.prodswatch-{{section.id}} tr:first-child {
border-top: 3px solid transparent !important;
  /* background-color: blue; */
}

.prodswatch-{{section.id}} tr { 
  color: #57575;  border-top:1px solid #FFF !important;
}
.prodswatch-{{section.id}} table {
  margin: auto;
  border: none !important;   
}
</style>